{"version":3,"sources":["Pages/Login.js","Components/MainNav.js","Utils/API.js","Components/GameSearchCard.js","Components/GameSearchArea.js","Components/YourLibrary.js","Pages/UserPage.js","Pages/MeetUps.js","Pages/NewMeetUp.js","App.js","index.js"],"names":["Pages","className","type","id","href","MainNav","API","searchGames","query","axios","get","then","response","console","log","parsedRes","DOMParser","parseFromString","data","catch","error","searchById","addGame","game","title","post","bggId","imageString","getGameByBGG","addUser","newUser","username","userName","password","setCurrentUser","addMeetup","newMeet","name","timeInfo","locationInfo","extraInfo","owner_id","ownerId","getMeetup","addUserGame","newUserGame","userId","gameId","findUserGameByUser","findUserGame","GameSearchCard","props","src","alt","onClick","saveBtnPress","GameSearchArea","results","map","i","YourLibrary","scope","library","UserPage","componentDidMount","handleFieldChange","event","setState","searchField","target","value","handleGameSearch","state","res","searchResults","childNodes","newTitle","getAttribute","newId","push","gamesSearched","targetBGG","targetTitle","userAddingGame","currentUser","this","onChange","Component","MeetUps","NewMeetUp","handleTitleUpdate","titleField","handleTimeUpdate","timeField","handleLocationUpdate","locationField","handleExtraUpdate","extraField","addNewMeetup","redAlert","newTime","newLocation","newExtra","newOwner","greenAlert","textInput","React","createRef","role","maxLength","ref","App","path","Login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79b26be4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Pages() {\r\n    return (\r\n        <div className=\"container\">\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n                <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                <label className=\"form-check-label\">Check me out</label>\r\n            </div>\r\n            <a href=\"/user-page\" className=\"btn btn-primary\">Submit</a>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pages;\r\n","function MainNav() {\r\n    return(\r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item mx-auto\">\r\n                <a href=\"/user-page\">Your Page</a>\r\n            </li>\r\n            <li className=\"nav-item mx-auto\">\r\n                <a href=\"/meet-ups\">Meet-Ups</a>\r\n            </li>\r\n            <li className=\"nav-item mx-auto\">\r\n                <a href=\"/new-meet-up\">Post New Meet-Up</a>\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default MainNav;","import axios from \"axios\";\r\n\r\nconst API = {\r\n\r\n    // Makes a search to the boardgamegeek api with a given query, only returns game and expansion items\r\n    searchGames: function(query) {\r\n        return axios.get(\"https://www.boardgamegeek.com/xmlapi2/search?type=boardgame,boardgameexpansion&query=\" + query)\r\n        .then(function(response) {\r\n            console.log(response);\r\n            let parser = new DOMParser();\r\n            let parsedRes = parser.parseFromString(response.data, \"text/xml\");\r\n            console.log(parsedRes);\r\n            return(parsedRes);\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        }).then(console.log(\"Ran Search..\"));\r\n    },\r\n\r\n    // Gets an item with a specific bgg_id, only returns one item\r\n    searchById: function(id) {\r\n        return axios.get(\"https://www.boardgamegeek.com/xmlapi2/thing?id=\" + id)\r\n        .then(function(response) {\r\n            let parser = new DOMParser();\r\n            let parsedRes = parser.parseFromString(response.data, \"text/xml\");\r\n            return(parsedRes);\r\n        });\r\n    },\r\n\r\n    // DATABASE ROUTES\r\n    // ==========================================================\r\n\r\n    // Game Routes\r\n    //-------------------------------------------------\r\n    // Adds a new game to database, from GameController\r\n    addGame: function(game) {\r\n        console.log(\"Attempting to add game: \" + game.title);\r\n        return axios.post(\"/api/game\", {title: game.title, bggId: game.bggId, imageString: game.imageString})\r\n    },\r\n\r\n    getGameByBGG: function(bggId) {\r\n        return axios.get(\"/api/game/\" + bggId);\r\n    },\r\n\r\n    // User Routes\r\n    // ------------------------------------------------\r\n    // Adds a new user to the database, from UserController\r\n    addUser: function(newUser) {\r\n        return axios.post(\"/api/user\", {username: newUser.userName, password: newUser.password});\r\n    },\r\n\r\n    // Sets currentUser to a user found by id\r\n    setCurrentUser: function(id) {\r\n        return axios.get(\"/api/user/\" + id);\r\n    },\r\n\r\n    // Meetup Routes\r\n    // ----------------------------------------------------\r\n    // Adds a new meetup to the database, from MeetupController\r\n    addMeetup: function(newMeet) {\r\n        return axios.post(\"/api/meetup\", {\r\n            name: newMeet.name,\r\n            timeInfo: newMeet.timeInfo,\r\n            locationInfo: newMeet.locationInfo,\r\n            extraInfo: newMeet.extraInfo,\r\n            owner_id: newMeet.ownerId\r\n        });\r\n    },\r\n\r\n    // Gets a meetup by ID\r\n    getMeetup: function(id) {\r\n        return axios.get(\"/api/meetup/\" + id);\r\n    },\r\n\r\n    // UserGame Routes\r\n    // ------------------------------------------------------\r\n    // Adds a new user-game association to the usergame table\r\n    addUserGame: function(newUserGame) {\r\n        return axios.post(\"/api/usergame\", {\r\n            userId: newUserGame.userId,\r\n            gameId: newUserGame.gameId\r\n        });\r\n    },\r\n\r\n    // Finds associations by the user's ID\r\n    findUserGameByUser: function(id) {\r\n        return axios.get(\"/api/usergame/byUser/\" + id);\r\n    },\r\n\r\n    // Finds an association by a userId and a gameId\r\n    findUserGame: function(query) {\r\n        return axios.get(\"/api/usergame\", {\r\n            userId: query.userId,\r\n            gameId: query.gameId\r\n        })\r\n    },\r\n\r\n};\r\n\r\nexport default API;","import React from \"react\";\r\n\r\nconst GameSearchCard = (props) => {\r\n\r\n    return(\r\n        <div className=\"card-container border rounded my-3 bg-dark text-white\">\r\n            <img className=\"p-3\" src=\"https://via.placeholder.com/150\" alt={props.title}/>\r\n            <div className=\"desc p-3\">\r\n                <h2>{props.title}</h2>\r\n                <h3>{props.bggId}</h3>\r\n                <button className=\"btn btn-primary\" bggId={props.bggId} title={props.title} onClick={props.saveBtnPress}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameSearchCard;\r\n","import React from \"react\";\r\n// import API from \"../Utils/API\";\r\nimport GameSearchCard from \"./GameSearchCard\";\r\n\r\nfunction GameSearchArea(props) {\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            {\r\n                props.results.map((game, i) => {\r\n                    return <GameSearchCard\r\n                        key ={i}\r\n                        title={game.title}\r\n                        bggId={game.id}\r\n                        saveBtnPress={props.saveBtnPress}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSearchArea;\r\n","import React from \"react\";\r\n\r\nfunction YourLibrary(props) {\r\n\r\n    return (\r\n        <div className=\"library\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Game</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.library.map((game, i) => {\r\n                        return <tr>\r\n                            <th scope=\"row\">{i + 1}</th>\r\n                            <td>{game.title}</td>\r\n                        </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YourLibrary;\r\n","import React, {Component} from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\nimport API from '../Utils/API';\r\nimport GameSearchArea from '../Components/GameSearchArea';\r\nimport YourLibrary from \"../Components/YourLibrary\";\r\n\r\nclass UserPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchField: \"\",\r\n            gamesSearched: [],\r\n            currentUser: 1,\r\n            library: [{title: \"Glooooomb\"}, {title: \"wahooRat\"}]\r\n        };\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        // API.findUserGameByUser(this.state.currentUser)\r\n        // .then((res) => {\r\n        //     console.log(res)\r\n        // });\r\n        console.log(\"COMPONENTDIDMOUNT\");\r\n    };\r\n\r\n    handleFieldChange = (event) => {\r\n        this.setState({searchField: event.target.value});\r\n    };\r\n\r\n    handleGameSearch = () => {\r\n        API.searchGames(this.state.searchField)\r\n        .then((res) => {\r\n            console.log(\"Searched successfully\");\r\n            let searchResults = [];\r\n            // Render 10 GameSearchCards from the search results\r\n            for (let i=1; i<20; i=i+2) {\r\n                console.log(res.childNodes[0].childNodes[i]);\r\n                let newTitle = res.childNodes[0].childNodes[i].childNodes[1].getAttribute(\"value\");\r\n                let newId = res.childNodes[0].childNodes[i].getAttribute(\"id\");\r\n                searchResults.push({\r\n                    title: newTitle,\r\n                    id: newId\r\n                });\r\n                this.setState({gamesSearched: searchResults});\r\n            };\r\n        });\r\n    };\r\n\r\n    // Saves the game to the database when clicked\r\n    saveBtnPress = (event) => {\r\n        let targetBGG = event.target.getAttribute(\"bggid\");\r\n        let targetTitle = event.target.getAttribute(\"title\");\r\n        let userAddingGame = this.state.currentUser;\r\n        console.log(\"You clicked a save button with bggId: \" + targetBGG);\r\n\r\n        API.addGame({\r\n            title: targetTitle,\r\n            bggId: targetBGG,\r\n            imageString:\"https://via.placeholder.com/150\"\r\n        })\r\n        .then(function(res) {\r\n            API.addUserGame({\r\n                userId: userAddingGame,\r\n                gameId: res.data.id\r\n            })\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainNav />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                        <h1>Welcome to bgg-tracker</h1>\r\n                        <h3>Edit your Name and Collection here</h3>\r\n                        </div>\r\n                        <br></br>\r\n                        <h4 className=\"text-center\">Display Name Change</h4>\r\n                        <div className=\"input-group mb-4 text-center\">\r\n                            <input type=\"text\" className=\"form-control\"></input>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-primary text-white btn-outline-secondary\" type=\"submit\">Update</button>\r\n                            </div>\r\n                        </div>\r\n                        <br></br>\r\n                        <div className=\"col-12\">\r\n                            <h2>Your Current Library</h2>\r\n                            <YourLibrary library={this.state.library}/>\r\n                        </div>\r\n                        <br></br>\r\n                        <h4 className=\"mt-5\">Search</h4>\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" onChange={this.handleFieldChange} className=\"form-control\"/>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn text-white btn-success btn-outline-secondary\" type=\"submit\" onClick={this.handleGameSearch}>Search</button>\r\n                            </div>\r\n                        </div>\r\n                        <GameSearchArea results={this.state.gamesSearched} saveBtnPress= {this.saveBtnPress} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default UserPage;\r\n","import React, {Component} from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\n\r\nclass MeetUps extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainNav />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>View Meet-Ups by search</h1>\r\n                            <h3>Or, view all the meetups you're rsvp'd to</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default MeetUps;\r\n","import React, {Component} from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\nimport API from \"../Utils/API\";\r\n\r\nclass NewMeetUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textInput = React.createRef();\r\n        this.state = {\r\n            titleField: \"\",\r\n            timeField: \"\",\r\n            locationField: \"\",\r\n            extraField: \"\",\r\n            currentUser: 1,\r\n            redAlert: \"col-12 alert alert-danger invisible\",\r\n            greenAlert: \"col-12 alert alert-success invisible\",\r\n        };\r\n    };\r\n\r\n    // Field Update Methods\r\n    handleTitleUpdate = (event) => {\r\n        this.setState({titleField: event.target.value});\r\n    };\r\n\r\n    handleTimeUpdate = (event) => {\r\n        this.setState({timeField: event.target.value});\r\n    };\r\n\r\n    handleLocationUpdate = (event) => {\r\n        this.setState({locationField: event.target.value});\r\n    };\r\n\r\n    handleExtraUpdate = (event) => {\r\n        this.setState({extraField: event.target.value});\r\n    };\r\n\r\n    // Makes a post call to meetups using the states of the fields, IF none are empty\r\n        // If there are empty fields, then displays an alert for a few seconds\r\n    addNewMeetup = () => {\r\n        if (this.state.titleField == \"\" || this.state.timeField == \"\" || this.state.locationField == \"\" || this.state.extraField == \"\") {\r\n            this.setState({redAlert: \"col-12 my-3 alert alert-danger visible\"});\r\n        } else {\r\n            let newTitle = this.state.titleField;\r\n            let newTime = this.state.timeField;\r\n            let newLocation = this.state.locationField;\r\n            let newExtra = this.state.extraField;\r\n            let newOwner = this.state.currentUser;\r\n\r\n            API.addMeetup({\r\n                name: newTitle,\r\n                timeInfo: newTime,\r\n                locationInfo: newLocation,\r\n                extraInfo: newExtra,\r\n                ownerId: newOwner\r\n            })\r\n            .then( (res) => {\r\n                console.log(res);\r\n                this.setState({redAlert: \"col-12 alert alert-danger invisible\"});\r\n                this.setState({greenAlert: \"col-12 alert alert-success visible\"});\r\n                this.setState({titleField: \"\"});\r\n                this.setState({timeField: \"\"});\r\n                this.setState({locationField: \"\"});\r\n                this.setState({extraField: \"\"});\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainNav />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>Post a New Meetup</h1>\r\n                            <h3>Enter all the information your guests need about your gathering</h3>\r\n                            <h4>Make sure your guests know what name to search for to rsvp!</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className={this.state.greenAlert} role=\"alert\">Added your Meetup Successfully!</div>\r\n                        <h4 className=\"col-12\" >Meetup Title</h4>\r\n                        <input id=\"meetup-title\" maxLength=\"255\" ref={this.textInput} value={this.state.titleField} onChange={this.handleTitleUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <h4 className=\"col-12\" >Time Info</h4>\r\n                        <input id=\"time-input\" maxLength=\"255\" ref={this.textInput} value={this.state.timeField} onChange={this.handleTimeUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <h4 className=\"col-12\" >Location Info</h4>\r\n                        <input id=\"location-input\" maxLength=\"255\" ref={this.textInput} value={this.state.locationField} onChange={this.handleLocationUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <h4 className=\"col-12\" >Extra Info</h4>\r\n                        <input id=\"extra-input\" maxLength=\"255\" ref={this.textInput} value={this.state.extraField} onChange={this.handleExtraUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <div className={this.state.redAlert} role=\"alert\">Make sure you leave no fields empty.</div>                        \r\n                        <div className=\"input-group-append my-3 align-center\">\r\n                            <button className=\"btn btn-primary text-white btn-outline-secondary\" onClick={this.addNewMeetup} type=\"submit\">Add Meetup</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default NewMeetUp;\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nimport Login from './Pages/Login';\nimport UserPage from './Pages/UserPage';\nimport MeetUps from './Pages/MeetUps';\nimport NewMeetUp from './Pages/NewMeetUp';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/user-page\">\n          <UserPage />\n        </Route>\n        <Route path=\"/meet-ups\">\n          <MeetUps />\n        </Route>\n        <Route path=\"/new-meet-up\">\n          <NewMeetUp />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}