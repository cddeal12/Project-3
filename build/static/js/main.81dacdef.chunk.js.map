{"version":3,"sources":["Pages/Login.js","Components/MainNav.js","Utils/API.js","Components/GameSearchCard.js","Components/GameSearchArea.js","Components/YourLibrary.js","Pages/UserPage.js","Components/MeetupsCard.js","Pages/MeetUps.js","Pages/NewMeetUp.js","Pages/MeetupInfo.js","App.js","index.js"],"names":["Pages","className","type","id","href","MainNav","API","searchGames","query","axios","get","then","response","console","log","parsedRes","DOMParser","parseFromString","data","catch","error","searchById","addGame","game","title","post","bggId","imageString","getGameByBGG","getGameById","addUser","newUser","username","userName","password","setCurrentUser","addMeetup","newMeet","name","timeInfo","locationInfo","extraInfo","owner_id","ownerId","getMeetup","getMeetupByOwner","addUserGame","newUserGame","userId","gameId","findUserGameByUser","findUserGame","GameSearchCard","props","src","alt","onClick","saveBtnPress","GameSearchArea","results","map","i","YourLibrary","componentDidMount","state","scope","this","library","Component","UserPage","currentUser","userGames","newLib","length","game_id","push","setState","handleFieldChange","event","searchField","target","value","handleGameSearch","res","searchResults","childNodes","newTitle","getAttribute","newId","gamesSearched","targetBGG","targetTitle","userAddingGame","currentLib","onChange","MeetupsCard","openMeetupInfo","localStorage","setItem","window","open","renderModal","MeetUps","displayedMeets","typeToDisplay","meet","meetup_name","time_info","location_info","extra_info","NewMeetUp","handleTitleUpdate","titleField","handleTimeUpdate","timeField","handleLocationUpdate","locationField","handleExtraUpdate","extraField","addNewMeetup","redAlert","newTime","newLocation","newExtra","newOwner","greenAlert","textInput","React","createRef","role","maxLength","ref","MeetupInfo","ownerName","meetupName","App","path","Login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81dacdef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Pages() {\r\n    return (\r\n        <div className=\"container\">\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n                <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                <label className=\"form-check-label\">Check me out</label>\r\n            </div>\r\n            <a href=\"/user-page\" className=\"btn btn-primary\">Submit</a>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pages;\r\n","function MainNav() {\r\n    return(\r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item mx-auto\">\r\n                <a href=\"/user-page\">Your Page</a>\r\n            </li>\r\n            <li className=\"nav-item mx-auto\">\r\n                <a href=\"/meet-ups\">Meet-Ups</a>\r\n            </li>\r\n            <li className=\"nav-item mx-auto\">\r\n                <a href=\"/new-meet-up\">Post New Meet-Up</a>\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default MainNav;","import axios from \"axios\";\r\n\r\nconst API = {\r\n\r\n    // Makes a search to the boardgamegeek api with a given query, only returns game and expansion items\r\n    searchGames: function(query) {\r\n        return axios.get(\"https://www.boardgamegeek.com/xmlapi2/search?type=boardgame,boardgameexpansion&query=\" + query)\r\n        .then(function(response) {\r\n            console.log(response);\r\n            let parser = new DOMParser();\r\n            let parsedRes = parser.parseFromString(response.data, \"text/xml\");\r\n            console.log(parsedRes);\r\n            return(parsedRes);\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        }).then(console.log(\"Ran Search..\"));\r\n    },\r\n\r\n    // Gets an item with a specific bgg_id, only returns one item\r\n    searchById: function(id) {\r\n        return axios.get(\"https://www.boardgamegeek.com/xmlapi2/thing?id=\" + id)\r\n        .then(function(response) {\r\n            let parser = new DOMParser();\r\n            let parsedRes = parser.parseFromString(response.data, \"text/xml\");\r\n            return(parsedRes);\r\n        });\r\n    },\r\n\r\n    // DATABASE ROUTES\r\n    // ==========================================================\r\n\r\n    // Game Routes\r\n    //-------------------------------------------------\r\n    // Adds a new game to database, from GameController\r\n    addGame: function(game) {\r\n        console.log(\"Attempting to add game: \" + game.title);\r\n        return axios.post(\"/api/game\", {title: game.title, bggId: game.bggId, imageString: game.imageString})\r\n    },\r\n\r\n    getGameByBGG: function(bggId) {\r\n        return axios.get(\"/api/game/\" + bggId);\r\n    },\r\n\r\n    getGameById: function(id) {\r\n        return axios.get(\"/api/game/byId/\" + id);\r\n    },\r\n\r\n    // User Routes\r\n    // ------------------------------------------------\r\n    // Adds a new user to the database, from UserController\r\n    addUser: function(newUser) {\r\n        return axios.post(\"/api/user\", {username: newUser.userName, password: newUser.password});\r\n    },\r\n\r\n    // Sets currentUser to a user found by id\r\n    setCurrentUser: function(id) {\r\n        return axios.get(\"/api/user/\" + id);\r\n    },\r\n\r\n    // Meetup Routes\r\n    // ----------------------------------------------------\r\n    // Adds a new meetup to the database, from MeetupController\r\n    addMeetup: function(newMeet) {\r\n        return axios.post(\"/api/meetup\", {\r\n            name: newMeet.name,\r\n            timeInfo: newMeet.timeInfo,\r\n            locationInfo: newMeet.locationInfo,\r\n            extraInfo: newMeet.extraInfo,\r\n            owner_id: newMeet.ownerId\r\n        });\r\n    },\r\n\r\n    // Gets a meetup by ID\r\n    getMeetup: function(id) {\r\n        return axios.get(\"/api/meetup/\" + id);\r\n    },\r\n\r\n    // Gets all meetups with an owner id\r\n    getMeetupByOwner: function(id) {\r\n        return axios.get(\"/api/meetupByUser/\" + id)\r\n    },\r\n\r\n    // UserGame Routes\r\n    // ------------------------------------------------------\r\n    // Adds a new user-game association to the usergame table\r\n    addUserGame: function(newUserGame) {\r\n        return axios.post(\"/api/usergame\", {\r\n            userId: newUserGame.userId,\r\n            gameId: newUserGame.gameId\r\n        });\r\n    },\r\n\r\n    // Finds associations by the user's ID\r\n    findUserGameByUser: function(id) {\r\n        return axios.get(\"/api/usergame/byUser/\" + id);\r\n    },\r\n\r\n    // Finds an association by a userId and a gameId\r\n    findUserGame: function(query) {\r\n        return axios.get(\"/api/usergame\", {\r\n            userId: query.userId,\r\n            gameId: query.gameId\r\n        })\r\n    },\r\n\r\n};\r\n\r\nexport default API;","import React from \"react\";\r\n\r\nconst GameSearchCard = (props) => {\r\n\r\n    return(\r\n        <div className=\"card-container border rounded my-3 bg-dark text-white\">\r\n            <img className=\"p-3\" src=\"https://via.placeholder.com/150\" alt={props.title}/>\r\n            <div className=\"desc p-3\">\r\n                <h2>{props.title}</h2>\r\n                <h3>{props.bggId}</h3>\r\n                <button className=\"btn btn-primary\" bggId={props.bggId} title={props.title} onClick={props.saveBtnPress}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameSearchCard;\r\n","import React from \"react\";\r\n// import API from \"../Utils/API\";\r\nimport GameSearchCard from \"./GameSearchCard\";\r\n\r\nfunction GameSearchArea(props) {\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            {\r\n                props.results.map((game, i) => {\r\n                    return <GameSearchCard\r\n                        key ={i}\r\n                        title={game.title}\r\n                        bggId={game.id}\r\n                        saveBtnPress={props.saveBtnPress}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSearchArea;\r\n","import React, { Component } from \"react\";\r\n// import API from \"../Utils/API\";\r\n\r\nclass YourLibrary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"Library Mounted\");\r\n    };\r\n\r\n    // componentDidUpdate = () => {\r\n    //     console.log(this.props);\r\n    //     let newLib = [];\r\n    //     for (let i=0; i<this.props.library.length; i++){\r\n    //         API.getGameById(this.props.library[i].game_id)\r\n    //         .then((response) => {\r\n    //             newLib.push(response.data.title)\r\n    //             console.log(newLib);\r\n    //             this.setState({library: newLib});\r\n    //         });\r\n    //     }\r\n    // };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"library\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Game</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.props.library.map((game, i) => {\r\n                                return <tr>\r\n                                    <th scope=\"row\">{i + 1}</th>\r\n                                    <td>{game}</td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default YourLibrary;\r\n","import React, {Component} from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\nimport API from '../Utils/API';\r\nimport GameSearchArea from '../Components/GameSearchArea';\r\nimport YourLibrary from \"../Components/YourLibrary\";\r\n\r\nclass UserPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchField: \"\",\r\n            gamesSearched: [],\r\n            currentUser: 1,\r\n            library: []\r\n        };\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"COMPONENTDIDMOUNT\");\r\n\r\n        // Gets all the games owned by the current user\r\n        API.findUserGameByUser(this.state.currentUser)\r\n        .then((userGames) => {\r\n            console.log(userGames);\r\n            let newLib = [];\r\n            for (let i=0; i<userGames.data.length; i++){\r\n                API.getGameById(userGames.data[i].game_id)\r\n                .then((response) => {\r\n                    newLib.push(response.data.title)\r\n                    console.log(newLib);\r\n                    this.setState({library: newLib});\r\n            });\r\n        }\r\n\r\n\r\n        });\r\n    };\r\n\r\n    handleFieldChange = (event) => {\r\n        this.setState({searchField: event.target.value});\r\n    };\r\n\r\n    handleGameSearch = () => {\r\n        API.searchGames(this.state.searchField)\r\n        .then((res) => {\r\n            console.log(\"Searched successfully\");\r\n            let searchResults = [];\r\n            // Render 10 GameSearchCards from the search results\r\n            for (let i=1; i<20; i=i+2) {\r\n                console.log(res.childNodes[0].childNodes[i]);\r\n                let newTitle = res.childNodes[0].childNodes[i].childNodes[1].getAttribute(\"value\");\r\n                let newId = res.childNodes[0].childNodes[i].getAttribute(\"id\");\r\n                searchResults.push({\r\n                    title: newTitle,\r\n                    id: newId\r\n                });\r\n                this.setState({gamesSearched: searchResults});\r\n            };\r\n        });\r\n    };\r\n\r\n    // Saves the game to the database when clicked\r\n    saveBtnPress = (event) => {\r\n        let targetBGG = event.target.getAttribute(\"bggid\");\r\n        let targetTitle = event.target.getAttribute(\"title\");\r\n        let userAddingGame = this.state.currentUser;\r\n        console.log(\"You clicked a save button with bggId: \" + targetBGG);\r\n        let currentLib = this.state.library;\r\n        currentLib.push(targetTitle);\r\n\r\n        API.addGame({\r\n            title: targetTitle,\r\n            bggId: targetBGG,\r\n            imageString:\"https://via.placeholder.com/150\"\r\n        })\r\n        .then((res) => {\r\n            this.setState({library: currentLib});\r\n            API.addUserGame({\r\n                userId: userAddingGame,\r\n                gameId: res.data.id\r\n            })\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainNav />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                        <h1>Welcome to bgg-tracker</h1>\r\n                        <h3>Edit your Name and Collection here</h3>\r\n                        </div>\r\n                        <br></br>\r\n                        <h4 className=\"text-center\">Display Name Change</h4>\r\n                        <div className=\"input-group mb-4 text-center\">\r\n                            <input type=\"text\" className=\"form-control\"></input>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-primary text-white btn-outline-secondary\" type=\"submit\">Update</button>\r\n                            </div>\r\n                        </div>\r\n                        <br></br>\r\n                        <div className=\"col-12\">\r\n                            <h2>Your Current Library</h2>\r\n                            <YourLibrary library={this.state.library}/>\r\n                        </div>\r\n                        <br></br>\r\n                        <h4 className=\"mt-5\">Search</h4>\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" onChange={this.handleFieldChange} className=\"form-control\"/>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn text-white btn-success btn-outline-secondary\" type=\"submit\" onClick={this.handleGameSearch}>Search</button>\r\n                            </div>\r\n                        </div>\r\n                        <GameSearchArea results={this.state.gamesSearched} saveBtnPress= {this.saveBtnPress} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MeetupsCard extends Component {\r\n\r\n    openMeetupInfo = () => {\r\n        // Stores data in local storage to be passed into the new page\r\n        localStorage.setItem(\"meetupName\", this.props.name);\r\n        localStorage.setItem(\"ownerId\", this.props.ownerId);\r\n        localStorage.setItem(\"timeInfo\", this.props.timeInfo);\r\n        localStorage.setItem(\"locationInfo\", this.props.locationInfo);\r\n        localStorage.setItem(\"extraInfo\", this.props.extraInfo);\r\n        localStorage.setItem(\"currentUser\", this.props.currentUser);\r\n        window.open(\"/meetup-info\", \"_blank\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center border bg-primary rounded my-4\">\r\n                <div onClick={this.renderModal} className=\"col-9 bg-secondary border rounded my-3\">\r\n                    <h2>{this.props.name}</h2>\r\n                    <ul>\r\n                        <li>{this.props.timeInfo}</li>\r\n                        <li>{this.props.locationInfo}</li>\r\n                        <li>{this.props.extraInfo}</li>\r\n                    </ul>\r\n                    <button onClick={this.openMeetupInfo} className=\"btn btn-info text-white mb-3\">Details Page</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MeetupsCard;\r\n","import React, {Component} from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\nimport API from \"../Utils/API\";\r\nimport MeetupsCard from \"../Components/MeetupsCard\";\r\n\r\nclass MeetUps extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayedMeets: [],\r\n            typeToDisplay: \"Your Owned Meets\",\r\n            currentUser: 1\r\n        };\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"MeetupPage did mount.\");\r\n\r\n        // Sets the \"displayedMeets\" key of state to the user's owned meetups by default\r\n        API.getMeetupByOwner(this.state.currentUser)\r\n        .then((results) =>{\r\n            console.log(\"Did Mount Results\")\r\n            console.log(results);\r\n            this.setState({displayedMeets: results.data});\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainNav />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center mb-5\">\r\n                            <h1>View all of your meetups!</h1>\r\n                            <h3>Looking for a certain meetup? Try searching!</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div>\r\n                            <h2>Now showing: {this.state.typeToDisplay}</h2>\r\n                            {\r\n                                this.state.displayedMeets.map((meet, i) => {\r\n                                    return <MeetupsCard \r\n                                        key={i}\r\n                                        name={meet.meetup_name}\r\n                                        ownerId={meet.owner_id}\r\n                                        timeInfo={meet.time_info}\r\n                                        locationInfo={meet.location_info}\r\n                                        extraInfo={meet.extra_info}\r\n                                        currentUser={this.state.currentUser}\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default MeetUps;\r\n","import React, {Component} from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\nimport API from \"../Utils/API\";\r\n\r\nclass NewMeetUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textInput = React.createRef();\r\n        this.state = {\r\n            titleField: \"\",\r\n            timeField: \"\",\r\n            locationField: \"\",\r\n            extraField: \"\",\r\n            currentUser: 1,\r\n            redAlert: \"col-12 alert alert-danger invisible\",\r\n            greenAlert: \"col-12 alert alert-success invisible\",\r\n        };\r\n    };\r\n\r\n    // Field Update Methods\r\n    handleTitleUpdate = (event) => {\r\n        this.setState({titleField: event.target.value});\r\n    };\r\n\r\n    handleTimeUpdate = (event) => {\r\n        this.setState({timeField: event.target.value});\r\n    };\r\n\r\n    handleLocationUpdate = (event) => {\r\n        this.setState({locationField: event.target.value});\r\n    };\r\n\r\n    handleExtraUpdate = (event) => {\r\n        this.setState({extraField: event.target.value});\r\n    };\r\n\r\n    // Makes a post call to meetups using the states of the fields, IF none are empty\r\n        // If there are empty fields, then displays an alert for a few seconds\r\n    addNewMeetup = () => {\r\n        if (this.state.titleField === \"\" || this.state.timeField === \"\" || this.state.locationField === \"\" || this.state.extraField === \"\") {\r\n            this.setState({redAlert: \"col-12 my-3 alert alert-danger visible\"});\r\n        } else {\r\n            let newTitle = this.state.titleField;\r\n            let newTime = this.state.timeField;\r\n            let newLocation = this.state.locationField;\r\n            let newExtra = this.state.extraField;\r\n            let newOwner = this.state.currentUser;\r\n\r\n            API.addMeetup({\r\n                name: newTitle,\r\n                timeInfo: newTime,\r\n                locationInfo: newLocation,\r\n                extraInfo: newExtra,\r\n                ownerId: newOwner\r\n            })\r\n            .then( (res) => {\r\n                // Sets the alerts to the proper visibility and clears the input fields to prevent quick re-sending of an identical meetup\r\n                console.log(res);\r\n                this.setState({redAlert: \"col-12 alert alert-danger invisible\"});\r\n                this.setState({greenAlert: \"col-12 alert alert-success visible\"});\r\n                this.setState({titleField: \"\"});\r\n                this.setState({timeField: \"\"});\r\n                this.setState({locationField: \"\"});\r\n                this.setState({extraField: \"\"});\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainNav />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>Post a New Meetup</h1>\r\n                            <h3>Enter all the information your guests need about your gathering</h3>\r\n                            <h4>Make sure your guests know what name to search for to rsvp!</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className={this.state.greenAlert} role=\"alert\">Added your Meetup Successfully!</div>\r\n                        <h4 className=\"col-12\" >Meetup Title</h4>\r\n                        <input id=\"meetup-title\" maxLength=\"255\" ref={this.textInput} value={this.state.titleField} onChange={this.handleTitleUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <h4 className=\"col-12\" >Time Info</h4>\r\n                        <input id=\"time-input\" maxLength=\"255\" ref={this.textInput} value={this.state.timeField} onChange={this.handleTimeUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <h4 className=\"col-12\" >Location Info</h4>\r\n                        <input id=\"location-input\" maxLength=\"255\" ref={this.textInput} value={this.state.locationField} onChange={this.handleLocationUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <h4 className=\"col-12\" >Extra Info</h4>\r\n                        <input id=\"extra-input\" maxLength=\"255\" ref={this.textInput} value={this.state.extraField} onChange={this.handleExtraUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <div className={this.state.redAlert} role=\"alert\">Make sure you leave no fields empty.</div>                        \r\n                        <div className=\"input-group-append my-3 align-center\">\r\n                            <button className=\"btn btn-primary text-white btn-outline-secondary\" onClick={this.addNewMeetup} type=\"submit\">Add Meetup</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default NewMeetUp;\r\n","import React, { Component } from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\nimport API from \"../Utils/API\";\r\n\r\nclass MeetupInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: localStorage.meetupName,\r\n            ownerId: localStorage.ownerId,\r\n            timeInfo: localStorage.timeInfo,\r\n            locationInfo: localStorage.locationInfo,\r\n            extraInfo: localStorage.extraInfo,\r\n            currentUser: localStorage.currentUser,\r\n            ownerName: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"MeetupInfo Mounted with the following state...\")\r\n        console.log(this.state);\r\n\r\n        // Sets the owner's name to the state for display purposes\r\n        API.setCurrentUser(this.state.ownerId)\r\n        .then((response) => {\r\n            console.log(response);\r\n            this.setState({ownerName: response.data.name});\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <div>\r\n            <MainNav />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center my-5 border rounded text-white bg-secondary\">\r\n                        <h1>Meetup: {this.state.name}</h1>\r\n                        <h2>This meetup created by {this.state.ownerName}</h2>\r\n                        <ul>\r\n                            <p className=\"bg-dark rounded\">Time: {this.state.timeInfo}</p>\r\n                            <p className=\"bg-dark rounded\">Location: {this.state.locationInfo}</p>\r\n                            <p className=\"bg-dark rounded\">Information: {this.state.extraInfo}</p>\r\n                        </ul>\r\n                    </div>\r\n                    <hr></hr>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default MeetupInfo;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nimport Login from './Pages/Login';\nimport UserPage from './Pages/UserPage';\nimport MeetUps from './Pages/MeetUps';\nimport NewMeetUp from './Pages/NewMeetUp';\nimport MeetupInfo from './Pages/MeetupInfo';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/user-page\">\n          <UserPage />\n        </Route>\n        <Route path=\"/meet-ups\">\n          <MeetUps />\n        </Route>\n        <Route path=\"/new-meet-up\">\n          <NewMeetUp />\n        </Route>\n        <Route path=\"/meetup-info\">\n          <MeetupInfo />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}