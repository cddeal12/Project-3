{"version":3,"sources":["Pages/Login.js","Components/MainNav.js","Utils/API.js","Components/GameSearchCard.js","Components/GameSearchArea.js","Components/YourLibrary.js","Pages/UserPage.js","Components/MeetupsCard.js","Pages/MeetUps.js","Pages/NewMeetUp.js","Components/MeetupLibraries.js","Pages/MeetupInfo.js","App.js","index.js"],"names":["Pages","className","type","id","href","MainNav","API","searchGames","query","axios","get","then","response","console","log","parsedRes","DOMParser","parseFromString","data","catch","error","searchById","addGame","game","title","post","bggId","imageString","getGameByBGG","getGameById","addUser","newUser","username","userName","password","setCurrentUser","addMeetup","newMeet","name","timeInfo","locationInfo","extraInfo","owner_id","ownerId","getMeetup","getMeetupByOwner","addUserGame","newUserGame","userId","gameId","findUserGameByUser","findUserGame","addUserMeetup","meetupId","attendeeId","findUserMeetupByAttendee","findUserMeetupByMeetup","GameSearchCard","props","src","alt","onClick","saveBtnPress","GameSearchArea","results","map","i","YourLibrary","componentDidMount","state","scope","this","library","Component","UserPage","currentUser","userGames","newLib","length","game_id","push","setState","handleFieldChange","event","searchField","target","value","handleGameSearch","res","searchResults","childNodes","newTitle","getAttribute","newId","gamesSearched","targetBGG","targetTitle","userAddingGame","currentLib","onChange","MeetupsCard","openMeetupInfo","localStorage","setItem","thisMeetId","window","open","renderModal","MeetUps","displayedMeets","typeToDisplay","meet","meetup_name","time_info","location_info","extra_info","NewMeetUp","handleTitleUpdate","titleField","handleTimeUpdate","timeField","handleLocationUpdate","locationField","handleExtraUpdate","extraField","addNewMeetup","redAlert","newTime","newLocation","newExtra","newOwner","greenAlert","textInput","React","createRef","role","maxLength","ref","MeetupLibraries","attId","games","response2","setTimeout","gamesArray","MeetupInfo","ownerName","newOwnerCollection","ownerCollection","attendeesArr","forEach","element","attendee_id","attendees","handleRSVP","meetupName","attendeeLibraries","att","App","path","Login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df6543b4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Pages() {\r\n    return (\r\n        <div className=\"container\">\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n                <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                <label className=\"form-check-label\">Check me out</label>\r\n            </div>\r\n            <a href=\"/user-page\" className=\"btn btn-primary\">Submit</a>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pages;\r\n","function MainNav() {\r\n    return(\r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item mx-auto\">\r\n                <a href=\"/user-page\">Your Page</a>\r\n            </li>\r\n            <li className=\"nav-item mx-auto\">\r\n                <a href=\"/meet-ups\">Meet-Ups</a>\r\n            </li>\r\n            <li className=\"nav-item mx-auto\">\r\n                <a href=\"/new-meet-up\">Post New Meet-Up</a>\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default MainNav;","import axios from \"axios\";\r\n\r\nconst API = {\r\n\r\n    // Makes a search to the boardgamegeek api with a given query, only returns game and expansion items\r\n    searchGames: function(query) {\r\n        return axios.get(\"https://www.boardgamegeek.com/xmlapi2/search?type=boardgame,boardgameexpansion&query=\" + query)\r\n        .then(function(response) {\r\n            console.log(response);\r\n            let parser = new DOMParser();\r\n            let parsedRes = parser.parseFromString(response.data, \"text/xml\");\r\n            console.log(parsedRes);\r\n            return(parsedRes);\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        }).then(console.log(\"Ran Search..\"));\r\n    },\r\n\r\n    // Gets an item with a specific bgg_id, only returns one item\r\n    searchById: function(id) {\r\n        return axios.get(\"https://www.boardgamegeek.com/xmlapi2/thing?id=\" + id)\r\n        .then(function(response) {\r\n            let parser = new DOMParser();\r\n            let parsedRes = parser.parseFromString(response.data, \"text/xml\");\r\n            return(parsedRes);\r\n        });\r\n    },\r\n\r\n    // DATABASE ROUTES\r\n    // ==========================================================\r\n\r\n    // Game Routes\r\n    //-------------------------------------------------\r\n        // Adds a new game to database, from GameController\r\n        addGame: function(game) {\r\n            console.log(\"Attempting to add game: \" + game.title);\r\n            return axios.post(\"/api/game\", {title: game.title, bggId: game.bggId, imageString: game.imageString})\r\n        },\r\n\r\n        getGameByBGG: function(bggId) {\r\n            return axios.get(\"/api/game/\" + bggId);\r\n        },\r\n\r\n        getGameById: function(id) {\r\n            return axios.get(\"/api/game/byId/\" + id);\r\n        },\r\n\r\n    // User Routes\r\n    // ------------------------------------------------\r\n        // Adds a new user to the database, from UserController\r\n        addUser: function(newUser) {\r\n            return axios.post(\"/api/user\", {username: newUser.userName, password: newUser.password});\r\n        },\r\n\r\n        // Sets currentUser to a user found by id\r\n        setCurrentUser: function(id) {\r\n            return axios.get(\"/api/user/\" + id);\r\n        },\r\n\r\n    // Meetup Routes\r\n    // ----------------------------------------------------\r\n        // Adds a new meetup to the database, from MeetupController\r\n        addMeetup: function(newMeet) {\r\n            return axios.post(\"/api/meetup\", {\r\n                name: newMeet.name,\r\n                timeInfo: newMeet.timeInfo,\r\n                locationInfo: newMeet.locationInfo,\r\n                extraInfo: newMeet.extraInfo,\r\n                owner_id: newMeet.ownerId\r\n            });\r\n        },\r\n\r\n        // Gets a meetup by ID\r\n        getMeetup: function(id) {\r\n            return axios.get(\"/api/meetup/\" + id);\r\n        },\r\n\r\n        // Gets all meetups with an owner id\r\n        getMeetupByOwner: function(id) {\r\n            return axios.get(\"/api/meetupByUser/\" + id)\r\n        },\r\n\r\n    // UserGame Routes\r\n    // ------------------------------------------------------\r\n        // Adds a new user-game association to the usergame table\r\n        addUserGame: function(newUserGame) {\r\n            return axios.post(\"/api/usergame\", {\r\n                userId: newUserGame.userId,\r\n                gameId: newUserGame.gameId\r\n            });\r\n        },\r\n\r\n        // Finds associations by the user's ID\r\n        findUserGameByUser: function(id) {\r\n            return axios.get(\"/api/usergame/byUser/\" + id);\r\n        },\r\n\r\n        // Finds an association by a userId and a gameId\r\n        findUserGame: function(query) {\r\n            return axios.get(\"/api/usergame\", {\r\n                userId: query.userId,\r\n                gameId: query.gameId\r\n            });\r\n        },\r\n    \r\n    // UserMeetup Routes\r\n    // ------------------------------------------------------------------\r\n        // Adds a new association\r\n        addUserMeetup: function(query) {\r\n            return axios.post(\"/api/usermeetup\", {\r\n                meetupId: query.meetupId,\r\n                attendeeId: query.attendeeId\r\n            });\r\n        },\r\n\r\n        // Gets an association by an attendee\r\n        findUserMeetupByAttendee: function(id) {\r\n            return axios.get(\"/api/usermeetup/byUser/\" + id);\r\n        },\r\n\r\n        // Gets an association by the meetup\r\n        findUserMeetupByMeetup: function(id) {\r\n            return axios.get(\"/api/usermeetup/byMeetup/\" + id);\r\n        }\r\n\r\n\r\n};\r\n\r\nexport default API;","import React from \"react\";\r\n\r\nconst GameSearchCard = (props) => {\r\n\r\n    return(\r\n        <div className=\"card-container border rounded my-3 bg-dark text-white\">\r\n            <img className=\"p-3\" src=\"https://via.placeholder.com/150\" alt={props.title}/>\r\n            <div className=\"desc p-3\">\r\n                <h2>{props.title}</h2>\r\n                <h3>{props.bggId}</h3>\r\n                <button className=\"btn btn-primary\" bggId={props.bggId} title={props.title} onClick={props.saveBtnPress}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameSearchCard;\r\n","import React from \"react\";\r\n// import API from \"../Utils/API\";\r\nimport GameSearchCard from \"./GameSearchCard\";\r\n\r\nfunction GameSearchArea(props) {\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            {\r\n                props.results.map((game, i) => {\r\n                    return <GameSearchCard\r\n                        key ={i}\r\n                        title={game.title}\r\n                        bggId={game.id}\r\n                        saveBtnPress={props.saveBtnPress}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSearchArea;\r\n","import React, { Component } from \"react\";\r\n// import API from \"../Utils/API\";\r\n\r\nclass YourLibrary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"Library Mounted\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"library\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Game</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.props.library.map((game, i) => {\r\n                                return <tr>\r\n                                    <th scope=\"row\">{i + 1}</th>\r\n                                    <td>{game}</td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default YourLibrary;\r\n","import React, {Component} from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\nimport API from '../Utils/API';\r\nimport GameSearchArea from '../Components/GameSearchArea';\r\nimport YourLibrary from \"../Components/YourLibrary\";\r\n\r\nclass UserPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchField: \"\",\r\n            gamesSearched: [],\r\n            currentUser: 1,\r\n            library: []\r\n        };\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"COMPONENTDIDMOUNT\");\r\n\r\n        // Gets all the games owned by the current user\r\n        API.findUserGameByUser(this.state.currentUser)\r\n        .then((userGames) => {\r\n            console.log(userGames);\r\n            let newLib = [];\r\n            for (let i=0; i<userGames.data.length; i++){\r\n                API.getGameById(userGames.data[i].game_id)\r\n                .then((response) => {\r\n                    newLib.push(response.data.title)\r\n                    console.log(newLib);\r\n                    this.setState({library: newLib});\r\n            });\r\n        }\r\n\r\n\r\n        });\r\n    };\r\n\r\n    handleFieldChange = (event) => {\r\n        this.setState({searchField: event.target.value});\r\n    };\r\n\r\n    handleGameSearch = () => {\r\n        API.searchGames(this.state.searchField)\r\n        .then((res) => {\r\n            console.log(\"Searched successfully\");\r\n            let searchResults = [];\r\n            // Render 10 GameSearchCards from the search results\r\n            for (let i=1; i<20; i=i+2) {\r\n                console.log(res.childNodes[0].childNodes[i]);\r\n                let newTitle = res.childNodes[0].childNodes[i].childNodes[1].getAttribute(\"value\");\r\n                let newId = res.childNodes[0].childNodes[i].getAttribute(\"id\");\r\n                searchResults.push({\r\n                    title: newTitle,\r\n                    id: newId\r\n                });\r\n                this.setState({gamesSearched: searchResults});\r\n            };\r\n        });\r\n    };\r\n\r\n    // Saves the game to the database when clicked\r\n    saveBtnPress = (event) => {\r\n        let targetBGG = event.target.getAttribute(\"bggid\");\r\n        let targetTitle = event.target.getAttribute(\"title\");\r\n        let userAddingGame = this.state.currentUser;\r\n        console.log(\"You clicked a save button with bggId: \" + targetBGG);\r\n        let currentLib = this.state.library;\r\n        currentLib.push(targetTitle);\r\n\r\n        API.addGame({\r\n            title: targetTitle,\r\n            bggId: targetBGG,\r\n            imageString:\"https://via.placeholder.com/150\"\r\n        })\r\n        .then((res) => {\r\n            this.setState({library: currentLib});\r\n            API.addUserGame({\r\n                userId: userAddingGame,\r\n                gameId: res.data.id\r\n            })\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainNav />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                        <h1>Welcome to bgg-tracker</h1>\r\n                        <h3>Edit your Name and Collection here</h3>\r\n                        </div>\r\n                        <br></br>\r\n                        <h4 className=\"text-center\">Display Name Change</h4>\r\n                        <div className=\"input-group mb-4 text-center\">\r\n                            <input type=\"text\" className=\"form-control\"></input>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-primary text-white btn-outline-secondary\" type=\"submit\">Update</button>\r\n                            </div>\r\n                        </div>\r\n                        <br></br>\r\n                        <div className=\"col-12\">\r\n                            <h2>Your Current Library</h2>\r\n                            <YourLibrary library={this.state.library}/>\r\n                        </div>\r\n                        <br></br>\r\n                        <h4 className=\"mt-5\">Search</h4>\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" onChange={this.handleFieldChange} className=\"form-control\"/>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn text-white btn-success btn-outline-secondary\" type=\"submit\" onClick={this.handleGameSearch}>Search</button>\r\n                            </div>\r\n                        </div>\r\n                        <GameSearchArea results={this.state.gamesSearched} saveBtnPress= {this.saveBtnPress} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MeetupsCard extends Component {\r\n\r\n    openMeetupInfo = () => {\r\n        // Stores data in local storage to be passed into the new page\r\n        localStorage.setItem(\"meetupName\", this.props.name);\r\n        localStorage.setItem(\"ownerId\", this.props.ownerId);\r\n        localStorage.setItem(\"timeInfo\", this.props.timeInfo);\r\n        localStorage.setItem(\"locationInfo\", this.props.locationInfo);\r\n        localStorage.setItem(\"extraInfo\", this.props.extraInfo);\r\n        localStorage.setItem(\"currentUser\", this.props.currentUser);\r\n        localStorage.setItem(\"thisMeetId\", this.props.thisMeetId)\r\n        window.open(\"/meetup-info\", \"_blank\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center border bg-primary rounded my-4\">\r\n                <div onClick={this.renderModal} className=\"col-9 bg-secondary border rounded my-3\">\r\n                    <h2>{this.props.name}</h2>\r\n                    <ul>\r\n                        <li>{this.props.timeInfo}</li>\r\n                        <li>{this.props.locationInfo}</li>\r\n                        <li>{this.props.extraInfo}</li>\r\n                    </ul>\r\n                    <button onClick={this.openMeetupInfo} className=\"btn btn-info text-white mb-3\">Details Page</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MeetupsCard;\r\n","import React, {Component} from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\nimport API from \"../Utils/API\";\r\nimport MeetupsCard from \"../Components/MeetupsCard\";\r\n\r\nclass MeetUps extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayedMeets: [],\r\n            typeToDisplay: \"Your Owned Meets\",\r\n            currentUser: 1\r\n        };\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"MeetupPage did mount.\");\r\n\r\n        // Sets the \"displayedMeets\" key of state to the user's owned meetups by default\r\n        API.getMeetupByOwner(this.state.currentUser)\r\n        .then((results) =>{\r\n            console.log(\"Did Mount Results\")\r\n            console.log(results);\r\n            this.setState({displayedMeets: results.data});\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainNav />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center mb-5\">\r\n                            <h1>View all of your meetups!</h1>\r\n                            <h3>Looking for a certain meetup? Try searching!</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div>\r\n                            <h2>Now showing: {this.state.typeToDisplay}</h2>\r\n                            {\r\n                                this.state.displayedMeets.map((meet, i) => {\r\n                                    return <MeetupsCard \r\n                                        key={i}\r\n                                        name={meet.meetup_name}\r\n                                        ownerId={meet.owner_id}\r\n                                        timeInfo={meet.time_info}\r\n                                        locationInfo={meet.location_info}\r\n                                        extraInfo={meet.extra_info}\r\n                                        currentUser={this.state.currentUser}\r\n                                        thisMeetId={meet.id}\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default MeetUps;\r\n","import React, {Component} from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\nimport API from \"../Utils/API\";\r\n\r\nclass NewMeetUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textInput = React.createRef();\r\n        this.state = {\r\n            titleField: \"\",\r\n            timeField: \"\",\r\n            locationField: \"\",\r\n            extraField: \"\",\r\n            currentUser: 1,\r\n            redAlert: \"col-12 alert alert-danger invisible\",\r\n            greenAlert: \"col-12 alert alert-success invisible\",\r\n        };\r\n    };\r\n\r\n    // Field Update Methods\r\n    handleTitleUpdate = (event) => {\r\n        this.setState({titleField: event.target.value});\r\n    };\r\n\r\n    handleTimeUpdate = (event) => {\r\n        this.setState({timeField: event.target.value});\r\n    };\r\n\r\n    handleLocationUpdate = (event) => {\r\n        this.setState({locationField: event.target.value});\r\n    };\r\n\r\n    handleExtraUpdate = (event) => {\r\n        this.setState({extraField: event.target.value});\r\n    };\r\n\r\n    // Makes a post call to meetups using the states of the fields, IF none are empty\r\n        // If there are empty fields, then displays an alert for a few seconds\r\n    addNewMeetup = () => {\r\n        if (this.state.titleField === \"\" || this.state.timeField === \"\" || this.state.locationField === \"\" || this.state.extraField === \"\") {\r\n            this.setState({redAlert: \"col-12 my-3 alert alert-danger visible\"});\r\n        } else {\r\n            let newTitle = this.state.titleField;\r\n            let newTime = this.state.timeField;\r\n            let newLocation = this.state.locationField;\r\n            let newExtra = this.state.extraField;\r\n            let newOwner = this.state.currentUser;\r\n\r\n            API.addMeetup({\r\n                name: newTitle,\r\n                timeInfo: newTime,\r\n                locationInfo: newLocation,\r\n                extraInfo: newExtra,\r\n                ownerId: newOwner\r\n            })\r\n            .then( (res) => {\r\n                // Sets the alerts to the proper visibility and clears the input fields to prevent quick re-sending of an identical meetup\r\n                console.log(res);\r\n                this.setState({redAlert: \"col-12 alert alert-danger invisible\"});\r\n                this.setState({greenAlert: \"col-12 alert alert-success visible\"});\r\n                this.setState({titleField: \"\"});\r\n                this.setState({timeField: \"\"});\r\n                this.setState({locationField: \"\"});\r\n                this.setState({extraField: \"\"});\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainNav />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h1>Post a New Meetup</h1>\r\n                            <h3>Enter all the information your guests need about your gathering</h3>\r\n                            <h4>Make sure your guests know what name to search for to rsvp!</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className={this.state.greenAlert} role=\"alert\">Added your Meetup Successfully!</div>\r\n                        <h4 className=\"col-12\" >Meetup Title</h4>\r\n                        <input id=\"meetup-title\" maxLength=\"255\" ref={this.textInput} value={this.state.titleField} onChange={this.handleTitleUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <h4 className=\"col-12\" >Time Info</h4>\r\n                        <input id=\"time-input\" maxLength=\"255\" ref={this.textInput} value={this.state.timeField} onChange={this.handleTimeUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <h4 className=\"col-12\" >Location Info</h4>\r\n                        <input id=\"location-input\" maxLength=\"255\" ref={this.textInput} value={this.state.locationField} onChange={this.handleLocationUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <h4 className=\"col-12\" >Extra Info</h4>\r\n                        <input id=\"extra-input\" maxLength=\"255\" ref={this.textInput} value={this.state.extraField} onChange={this.handleExtraUpdate} type=\"text\" className=\"form-control\"></input>\r\n                        <div className={this.state.redAlert} role=\"alert\">Make sure you leave no fields empty.</div>                        \r\n                        <div className=\"input-group-append my-3 align-center\">\r\n                            <button className=\"btn btn-primary text-white btn-outline-secondary\" onClick={this.addNewMeetup} type=\"submit\">Add Meetup</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default NewMeetUp;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../Utils/API\";\r\n\r\nclass MeetupLibraries extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            gamesArray: []\r\n        };\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"Att library Mounted\");\r\n\r\n        API.setCurrentUser(this.props.attId)\r\n        .then((response) => {\r\n            this.setState({name: response.data.name});\r\n        });\r\n\r\n        let games = [];\r\n        API.findUserGameByUser(this.props.attId)\r\n        .then((response) => {\r\n            for (let i=0; i<response.data.length; i++) {\r\n                API.getGameById(response.data[i].game_id)\r\n                .then((response2) => {\r\n                    games.push(response2.data);\r\n                })\r\n            }\r\n        })\r\n        console.log(games);\r\n        setTimeout(() => { this.setState({gamesArray: games})}, 1000);\r\n        this.setState({gamesArray: games});\r\n    };\r\n\r\n    render() {\r\n\r\n        // let name = \"\";\r\n        // API.setCurrentUser(this.props.attId)\r\n        // .then((response) => {\r\n        //     name = response.data.name;\r\n        // });\r\n\r\n        // let games = [];\r\n        // API.findUserGameByUser(this.props.attId)\r\n        // .then((response) => {\r\n        //     for (let i=0; i<response.data.length; i++) {\r\n        //         API.getGameById(response.data[i].game_id)\r\n        //         .then((response2) => {\r\n        //             games.push(response2.data);\r\n        //         })\r\n        //     }\r\n        // })\r\n        // console.log(games);\r\n\r\n        return (\r\n            <div className=\"library\">\r\n                <h3>{this.state.name} is bringing...</h3>\r\n                <div className=\"library\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Game</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.gamesArray.map((game, i) => {\r\n                                    return <tr>\r\n                                        <th scope=\"row\">{i + 1}</th>\r\n                                        <td>{game.title}</td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default MeetupLibraries;\r\n","import React, { Component } from \"react\";\r\nimport MainNav from '../Components/MainNav';\r\nimport YourLibrary from \"../Components/YourLibrary\";\r\nimport MeetupLibraries from \"../Components/MeetupLibraries\";\r\nimport API from \"../Utils/API\";\r\n\r\nclass MeetupInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: localStorage.meetupName,\r\n            ownerId: localStorage.ownerId,\r\n            timeInfo: localStorage.timeInfo,\r\n            locationInfo: localStorage.locationInfo,\r\n            extraInfo: localStorage.extraInfo,\r\n            currentUser: localStorage.currentUser,\r\n            thisMeetId: localStorage.thisMeetId,\r\n            ownerName: \"\",\r\n            attendees: [],\r\n            ownerCollection: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(\"MeetupInfo Mounted with the following state...\")\r\n        console.log(this.state);\r\n\r\n        // Sets the owner's name to the state for display purposes\r\n        API.setCurrentUser(this.state.ownerId)\r\n        .then((response) => {\r\n            console.log(response);\r\n            this.setState({ownerName: response.data.name});\r\n        });\r\n\r\n        // Sets the owner's collection\r\n        API.findUserGameByUser(this.state.ownerId)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            let newOwnerCollection = [];\r\n            for (let i=0; i<response.data.length; i++){\r\n                API.getGameById(response.data[i].game_id)\r\n                .then((response) => {\r\n                    newOwnerCollection.push(response.data.title);\r\n                    this.setState({ownerCollection: newOwnerCollection});\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n        // Sets an array of user ids who are attending\r\n        API.findUserMeetupByMeetup(this.state.thisMeetId)\r\n        .then((response) => {\r\n            let attendeesArr = [];\r\n            response.data.forEach(element => {\r\n                attendeesArr.push(element.attendee_id);\r\n            });\r\n            this.setState({attendees: attendeesArr});\r\n        });\r\n\r\n    };\r\n\r\n    // Adds new association to attach the current user to the current meetup\r\n    handleRSVP = () => {\r\n        API.addUserMeetup({meetupId: this.state.thisMeetId, attendeeId: this.state.currentUser})\r\n        .then((response) => {\r\n            console.log(\"Added usermeetup association\");\r\n            console.log(response.data);\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        let attendeeLibraries = [];\r\n        this.state.attendees.forEach((att) => {\r\n            attendeeLibraries.push(<MeetupLibraries attId={att}/>);\r\n        });\r\n\r\n        return <div>\r\n            <MainNav />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center my-5 border rounded text-white bg-secondary\">\r\n                        <h1>Meetup: {this.state.name}</h1>\r\n                        <h2>This meetup created by {this.state.ownerName}</h2>\r\n                        <ul>\r\n                            <p className=\"bg-dark rounded\">Time: {this.state.timeInfo}</p>\r\n                            <p className=\"bg-dark rounded\">Location: {this.state.locationInfo}</p>\r\n                            <p className=\"bg-dark rounded\">Information: {this.state.extraInfo}</p>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h3>{this.state.ownerName} is bringing...</h3>\r\n                        <YourLibrary library={this.state.ownerCollection} />\r\n                        {attendeeLibraries}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <button onClick={this.handleRSVP} className=\"btn btn-primary\">RSVP</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default MeetupInfo;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nimport Login from './Pages/Login';\nimport UserPage from './Pages/UserPage';\nimport MeetUps from './Pages/MeetUps';\nimport NewMeetUp from './Pages/NewMeetUp';\nimport MeetupInfo from './Pages/MeetupInfo';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/user-page\">\n          <UserPage />\n        </Route>\n        <Route path=\"/meet-ups\">\n          <MeetUps />\n        </Route>\n        <Route path=\"/new-meet-up\">\n          <NewMeetUp />\n        </Route>\n        <Route path=\"/meetup-info\">\n          <MeetupInfo />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}